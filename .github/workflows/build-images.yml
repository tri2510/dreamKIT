name: Build and Publish Docker Images

on:
  push:
    branches: [ main, optimize-integration ]
    paths:
      - 'dreamos-core/dk-ivi-lite/Dockerfile.builder'
      - 'dreamos-core/dk-ivi-lite/Dockerfile.runtime'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'dreamos-core/dk-ivi-lite/Dockerfile.builder'
      - 'dreamos-core/dk-ivi-lite/Dockerfile.runtime'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BUILDER_IMAGE_NAME: dk-ivi-builder
  RUNTIME_IMAGE_NAME: dk-ivi-runtime

jobs:
  build-builder:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BUILDER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest
          
    - name: Build and push Builder image
      uses: docker/build-push-action@v5
      with:
        context: dreamos-core/dk-ivi-lite
        file: dreamos-core/dk-ivi-lite/Dockerfile.builder
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-runtime:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.RUNTIME_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Runtime image
      uses: docker/build-push-action@v5
      with:
        context: dreamos-core/dk-ivi-lite
        file: dreamos-core/dk-ivi-lite/Dockerfile.runtime
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max