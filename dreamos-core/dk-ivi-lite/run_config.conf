# dk_ivi Run Configuration
# Auto-generated with current runtime values
# Edit these values to customize container behavior

# Container and Image Settings
CONTAINER_NAME=dk_ivi
BUILDER_IMAGE=dk-ivi-builder
RUNTIME_IMAGE=dk-ivi-runtime

# Application Settings
DK_USER=htr1hc
DOCKER_HUB_NAMESPACE=ghcr.io/samtranbosch
ARCH=x86_64
HOME_DIR=/home/htr1hc

# Docker Runtime Settings (matching dk_run.sh)
RESTART_POLICY=unless-stopped        # unless-stopped/no/always
LOG_MAX_SIZE=10m
LOG_MAX_FILES=3
QT_BACKEND=software
MOUNT_MODE=ro
RUN_MODE=detached                    # detached/interactive

# GUI and Hardware Settings
ENABLE_GPU=auto          # auto/true/false - GPU hardware acceleration
X11_FORWARDING=auto  # auto/true/false - X11 display forwarding

# Advanced Settings
# Extra volume mounts (format: "-v host:container -v host2:container2")
EXTRA_VOLUMES=""

# Extra environment variables (format: "-e VAR1=value1 -e VAR2=value2")
EXTRA_ENV_VARS=""

# Extra Docker arguments (any additional docker run arguments)
EXTRA_DOCKER_ARGS=""

# Examples of what you can add:
# EXTRA_VOLUMES="-v /my/config:/app/config -v /my/data:/app/data"
# EXTRA_ENV_VARS="-e DEBUG_MODE=1 -e LOG_LEVEL=debug"
# EXTRA_DOCKER_ARGS="--privileged --cap-add=SYS_ADMIN"

# GUI Examples:
# ENABLE_GPU=false              # Force software rendering
# X11_FORWARDING=true           # Force X11 forwarding
# QT_BACKEND=opengl             # Use OpenGL backend instead of software
# RUN_MODE=interactive          # Run in foreground with direct output

# dreamOS Integration:
# This configuration matches the dk_run.sh setup for full dreamOS compatibility
# Container name matches standard dreamOS convention (dk_ivi)
# Restart policy set to unless-stopped for persistence
# Docker socket sharing enabled for dreamOS integration
