version: '3.8'

# Enhanced DreamKIT IVI Docker Compose
# Simplified deployment with only essential services

services:
  # SDV Runtime - Core vehicle signal server
  sdv-runtime:
    image: ghcr.io/tri2510/sdv-runtime:latest
    container_name: sdv-runtime
    restart: unless-stopped
    network_mode: host
    environment:
      - USER=${DK_USER:-root}
      - RUNTIME_NAME=dreamKIT-${RUNTIME_SERIAL:-enhanced}
      - ARCH=${DK_ARCH:-amd64}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:55555/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "dk.service=sdv-runtime"
      - "dk.version=2.0-enhanced"

  # Enhanced DreamKIT IVI - Integrated UI with embedded services
  dk-ivi-enhanced:
    image: ghcr.io/tri2510/dk-ivi-enhanced:latest
    container_name: dk_ivi
    restart: unless-stopped
    depends_on:
      - sdv-runtime
    network_mode: host
    environment:
      # Display and graphics
      - DISPLAY=${DISPLAY:-:0}
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-/run/user/1000}
      - QT_QPA_PLATFORM=${QT_QPA_PLATFORM:-xcb}
      - QT_QUICK_BACKEND=${QT_QUICK_BACKEND:-software}
      
      # DreamKIT configuration
      - DKCODE=dreamKIT
      - DK_USER=${DK_USER:-root}
      - DK_ARCH=${DK_ARCH:-amd64}
      - DK_CONTAINER_ROOT=/app/.dk/
      - DK_DOCKER_HUB_NAMESPACE=ghcr.io/tri2510
      
      # Enhanced mode settings
      - DK_EMBEDDED_MODE=1
      - DK_MOCK_MODE=1
      - DK_VIP=${DK_VIP:-false}
      
      # Library paths
      - LD_LIBRARY_PATH=/app/exec/library
      - QML_IMPORT_PATH=/usr/lib/x86_64-linux-gnu/qt6/qml
    volumes:
      # X11 for GUI
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XDG_RUNTIME_DIR:-/run/user/1000}:${XDG_RUNTIME_DIR:-/run/user/1000}
      
      # Docker socket for service management
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker:ro
      
      # Persistent data
      - ${HOME}/.dk:/app/.dk
      - dk-ivi-logs:/app/logs
      - dk-ivi-tmp:/app/tmp
      
      # Hardware access
      - /dev/shm:/dev/shm
    devices:
      # GPU access (if available)
      - /dev/dri:/dev/dri
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "/app/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    labels:
      - "dk.service=dk-ivi-enhanced"
      - "dk.version=2.0-enhanced"
      - "dk.features=embedded-services,integrated-manager"

# Named volumes for persistent data
volumes:
  dk-ivi-logs:
    driver: local
    labels:
      - "dk.volume=logs"
  dk-ivi-tmp:
    driver: local
    labels:
      - "dk.volume=temp"

# Networks (using host mode, but defining for clarity)
networks:
  default:
    external: true
    name: host